{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api/books'\n});\n\n// 📚 Get all books\nexport const getAllBooks = () => API.get('/');\n\n// 🔍 Search books by title, author, or genre\nexport const searchBooks = ({\n  title,\n  author,\n  genre\n}) => {\n  const params = new URLSearchParams();\n  if (name) params.append('name', title);\n  if (author) params.append('author', author);\n  if (genre) params.append('genre', genre);\n  return API.get(`/search?${params.toString()}`);\n};\n\n// 🆕 Add a new book\nexport const addBook = bookData => API.post('/', bookData);\n\n// ✏️ Update book by ID\nexport const updateBook = (id, updatedData) => API.put(`/${id}`, updatedData);\n\n// ❌ Delete book by ID\nexport const deleteBook = id => API.delete(`/${id}`);\n\n// 📂 Get books by author or genre (category filter)\nexport const getBooksByAuthor = authorName => API.get(`/author/${encodeURIComponent(authorName)}`);\nexport const getBooksByGenre = genre => API.get(`/genre/${encodeURIComponent(genre)}`);","map":{"version":3,"names":["axios","API","create","baseURL","getAllBooks","get","searchBooks","title","author","genre","params","URLSearchParams","name","append","toString","addBook","bookData","post","updateBook","id","updatedData","put","deleteBook","delete","getBooksByAuthor","authorName","encodeURIComponent","getBooksByGenre"],"sources":["C:/Users/dell/MUKTHAR AHMED ALI/LIBRARY-MANAGEMENT-SYSTEM/client/library-management-system/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:5000/api/books',\r\n});\r\n\r\n// 📚 Get all books\r\nexport const getAllBooks = () => API.get('/');\r\n\r\n// 🔍 Search books by title, author, or genre\r\nexport const searchBooks = ({ title, author, genre }) => {\r\n  const params = new URLSearchParams();\r\n  if (name) params.append('name', title);\r\n  if (author) params.append('author', author);\r\n  if (genre) params.append('genre', genre);\r\n  return API.get(`/search?${params.toString()}`);\r\n};\r\n\r\n// 🆕 Add a new book\r\nexport const addBook = (bookData) => API.post('/', bookData);\r\n\r\n// ✏️ Update book by ID\r\nexport const updateBook = (id, updatedData) => API.put(`/${id}`, updatedData);\r\n\r\n// ❌ Delete book by ID\r\nexport const deleteBook = (id) => API.delete(`/${id}`);\r\n\r\n// 📂 Get books by author or genre (category filter)\r\nexport const getBooksByAuthor = (authorName) =>\r\n  API.get(`/author/${encodeURIComponent(authorName)}`);\r\n\r\nexport const getBooksByGenre = (genre) =>\r\n  API.get(`/genre/${encodeURIComponent(genre)}`);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAMH,GAAG,CAACI,GAAG,CAAC,GAAG,CAAC;;AAE7C;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC;AAAM,CAAC,KAAK;EACvD,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpC,IAAIC,IAAI,EAAEF,MAAM,CAACG,MAAM,CAAC,MAAM,EAAEN,KAAK,CAAC;EACtC,IAAIC,MAAM,EAAEE,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEL,MAAM,CAAC;EAC3C,IAAIC,KAAK,EAAEC,MAAM,CAACG,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;EACxC,OAAOR,GAAG,CAACI,GAAG,CAAC,WAAWK,MAAM,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC;AAChD,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAIC,QAAQ,IAAKf,GAAG,CAACgB,IAAI,CAAC,GAAG,EAAED,QAAQ,CAAC;;AAE5D;AACA,OAAO,MAAME,UAAU,GAAGA,CAACC,EAAE,EAAEC,WAAW,KAAKnB,GAAG,CAACoB,GAAG,CAAC,IAAIF,EAAE,EAAE,EAAEC,WAAW,CAAC;;AAE7E;AACA,OAAO,MAAME,UAAU,GAAIH,EAAE,IAAKlB,GAAG,CAACsB,MAAM,CAAC,IAAIJ,EAAE,EAAE,CAAC;;AAEtD;AACA,OAAO,MAAMK,gBAAgB,GAAIC,UAAU,IACzCxB,GAAG,CAACI,GAAG,CAAC,WAAWqB,kBAAkB,CAACD,UAAU,CAAC,EAAE,CAAC;AAEtD,OAAO,MAAME,eAAe,GAAIlB,KAAK,IACnCR,GAAG,CAACI,GAAG,CAAC,UAAUqB,kBAAkB,CAACjB,KAAK,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}