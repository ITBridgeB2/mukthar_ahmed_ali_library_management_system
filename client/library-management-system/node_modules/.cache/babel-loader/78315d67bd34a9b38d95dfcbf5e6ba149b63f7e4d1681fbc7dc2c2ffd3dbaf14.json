{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\MUKTHAR AHMED ALI\\\\LIBRARY-MANAGEMENT-SYSTEM\\\\client\\\\library-management-system\\\\src\\\\pages\\\\ResultsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport BookCard from '../components/BookCard';\nimport { getAllBooks } from '../services/api';\nimport './ResultsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResultsPage() {\n  _s();\n  var _queryParams$get;\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const query = ((_queryParams$get = queryParams.get('query')) === null || _queryParams$get === void 0 ? void 0 : _queryParams$get.toLowerCase()) || '';\n  useEffect(() => {\n    const fetchAndFilterBooks = async () => {\n      try {\n        const response = await getAllBooks();\n        const allBooks = response.data || [];\n        const filtered = allBooks.filter(book => {\n          var _book$name, _book$author;\n          const title = ((_book$name = book.name) === null || _book$name === void 0 ? void 0 : _book$name.toLowerCase()) || '';\n          const author = ((_book$author = book.author) === null || _book$author === void 0 ? void 0 : _book$author.toLowerCase()) || '';\n          return title.includes(query) || author.includes(query);\n        });\n        setFilteredBooks(filtered);\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      }\n    };\n    fetchAndFilterBooks();\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Search Results for \\\"\", query, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-list\",\n      children: filteredBooks.length > 0 ? filteredBooks.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n        book: book\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-results\",\n        children: \"No books found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultsPage, \"xkqWxpBjCqqwRaBNMYidw8ur2pk=\", false, function () {\n  return [useLocation];\n});\n_c = ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","BookCard","getAllBooks","jsxDEV","_jsxDEV","ResultsPage","_s","_queryParams$get","filteredBooks","setFilteredBooks","location","queryParams","URLSearchParams","search","query","get","toLowerCase","fetchAndFilterBooks","response","allBooks","data","filtered","filter","book","_book$name","_book$author","title","name","author","includes","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","id","_c","$RefreshReg$"],"sources":["C:/Users/dell/MUKTHAR AHMED ALI/LIBRARY-MANAGEMENT-SYSTEM/client/library-management-system/src/pages/ResultsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport BookCard from '../components/BookCard';\r\nimport { getAllBooks } from '../services/api';\r\nimport './ResultsPage.css';\r\n\r\nexport default function ResultsPage() {\r\n  const [filteredBooks, setFilteredBooks] = useState([]);\r\n  const location = useLocation();\r\n\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const query = queryParams.get('query')?.toLowerCase() || '';\r\n\r\n  useEffect(() => {\r\n    const fetchAndFilterBooks = async () => {\r\n      try {\r\n        const response = await getAllBooks();\r\n        const allBooks = response.data || [];\r\n\r\n        const filtered = allBooks.filter((book) => {\r\n          const title = book.name?.toLowerCase() || '';\r\n          const author = book.author?.toLowerCase() || '';\r\n          return title.includes(query) || author.includes(query);\r\n        });\r\n\r\n        setFilteredBooks(filtered);\r\n      } catch (error) {\r\n        console.error('Error fetching books:', error);\r\n      }\r\n    };\r\n\r\n    fetchAndFilterBooks();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"results-page\">\r\n      <h2>Search Results for \"{query}\"</h2>\r\n      <div className=\"results-list\">\r\n        {filteredBooks.length > 0 ? (\r\n          filteredBooks.map((book) => (\r\n            <BookCard key={book.id} book={book} />\r\n          ))\r\n        ) : (\r\n          <p className=\"no-results\">No books found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}